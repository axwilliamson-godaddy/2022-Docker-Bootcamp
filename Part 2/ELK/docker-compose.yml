# Adapted from: https://github.com/docker/awesome-compose/tree/master/elasticsearch-logstash-kibana

version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION:-7.8.0}
    container_name: es
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - esdata:/usr/share/elasticsearch/data/
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - elastic
  filebeat:
    container_name: filebeat
    hostname: filebeat
    user: root
    image: docker.elastic.co/beats/filebeat:${STACK_VERSION:-7.8.0}
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./configs/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - fbdata:/usr/share/filebeat/data/
    networks:
      - elastic
    command: filebeat -e -strict.perms=false
    restart: on-failure
    depends_on:
      elasticsearch:  { condition: service_healthy }
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION:-7.8.0}
    container_name: kib
    ports:
      - "5601:5601"
    healthcheck:
        test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
        retries: 10
        interval: 10s
    logging:
        driver: 'json-file'
        options:
            max-size: '2m'
            max-file: '5'
    depends_on:
        elasticsearch:
            condition: service_healthy
    networks:
      - elastic
  apm-server:
    image: docker.elastic.co/apm/apm-server:${STACK_VERSION:-7.8.0}
    ports:
        - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
        - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    command: >
        apm-server -e
        -E apm-server.rum.enabled=true
        -E apm-server.host=0.0.0.0:8200
        -E setup.kibana.host=kibana:5601
    cap_drop:
        - ALL
    cap_add:
        - CHOWN
        - DAC_OVERRIDE
        - SETGID
        - SETUID
    logging:
        driver: 'json-file'
        options:
            max-size: '2m'
            max-file: '5'
    depends_on:
        elasticsearch:
            condition: service_healthy
    healthcheck:
        test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/healthcheck"]
        retries: 10
        interval: 10s
    networks:
        - elastic
networks:
  elastic:
    driver: bridge

volumes:
    esdata:
        driver: local
    fbdata:
        driver: local